{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/index.ts","webpack:///./src/Errors.ts","webpack:///./src/index.ts","webpack:///./src/GoogleLoader.ts","webpack:///./node_modules/tiny-emitter/index.js","webpack:///./src/Renderable.ts","webpack:///./src/DataQuery.ts","webpack:///./index.ts","webpack:///./src/LavaJs.ts","webpack:///./src/Chart.ts","webpack:///./src/lib/datatable.ts","webpack:///./src/lib/options.ts","webpack:///./src/VisualizationProps.ts","webpack:///./src/Dashboard.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","createDataTable","defaultOptions","toString","slice","Promise","resolve","document","readyState","addEventListener","target","type","callback","useCapture","attachEvent","LavaJsError","Error","message","super","label","msg","elemId","GoogleLoader","LavaJs","domLoaded","options","API_VERSION","LOADER_URL","packages","Set","window","google","scripts","getElementsByTagName","script","Array","from","src","this","config","language","locale","mapsApiKey","pkgs","add","console","log","googleLoaderInPage","addGoogleScriptToHead","charts","load","setOnLoadCallback","createElement","async","onload","onreadystatechange","event","test","head","appendChild","E","on","ctx","e","push","fn","once","self","listener","off","apply","arguments","_","emit","data","evtArr","len","length","evts","liveEvents","TinyEmitter","Renderable","json","dataSrc","elementId","container","getElementById","formats","class","getProp","VIZ_PROPS","CLASS","package","PACKAGE","_preDraw","uuid","preDraw","DataError","googleChart","draw","_postDraw","postDraw","ElementIdNotFound","setData","applyFormats","payload","response","send","getDataTable","visualization","DataTable","format","formatter","index","DataQuery","url","opts","transformer","sendMethod","query","Query","reject","isError","lava","lavacharts","configure","autorun","then","run","volcano","Map","loader","autoRun","assign","renderables","forEach","store","isLoaded","loadGoogle","group","VERSION","attachRedrawHandler","init","renderAll","readyCallback","groupEnd","promises","renderable","newRenderable","addPackage","set","has","RenderableNotFound","InvalidCallback","chart","size","responsive","debounced","addEvent","clearTimeout","setTimeout","redrawAll","debounceTimeout","Chart","png","Boolean","chartFactory","drawPng","img","getImageURI","innerHTML","getType","arrayToDataTable","getTableProperties","join","keys","joinMethod","dt1Columns","dt2Columns","datetimeFormat","timezone","propMap","AnnotationChart","AreaChart","BarChart","BubbleChart","CalendarChart","CandlestickChart","ColumnChart","ComboChart","DonutChart","GanttChart","GaugeChart","GeoChart","HistogramChart","LineChart","PieChart","SankeyChart","ScatterChart","SteppedAreaChart","TableChart","TimelineChart","TreeMapChart","WordTreeChart","prop","Dashboard","bindings"],"mappings":"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","file":"lava.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","import { createDataTable } from \"./datatable\";\nimport { defaultOptions } from \"./options\";\n\nexport { defaultOptions, createDataTable };\n\n/**\n * Returns the type of object, with a capital first letter.\n */\nexport function getType(object: any): string {\n  return Object.prototype.toString.call(object).slice(8, -1);\n}\n\n/**\n * Simple Promise for the DOM to be ready.\n */\nexport function domLoaded(): Promise<void> {\n  return new Promise(resolve => {\n    if (\n      document.readyState === \"interactive\" ||\n      document.readyState === \"complete\"\n    ) {\n      resolve();\n    } else {\n      document.addEventListener(\"DOMContentLoaded\", () => resolve);\n    }\n  });\n}\n\n/**\n * Method for attaching events to objects.\n *\n * @link http://stackoverflow.com/a/3150139 Credit to Alex V.\n */\nexport function addEvent(\n  target: any,\n  type: string,\n  callback: Function,\n  useCapture = false\n): void {\n  if (target === null || typeof target === \"undefined\") {\n    return;\n  }\n\n  if (target.addEventListener) {\n    target.addEventListener(type, callback, useCapture);\n  } else if (target.attachEvent) {\n    target.attachEvent(\"on\" + type, callback);\n  } else {\n    target[\"on\" + type] = callback;\n  }\n}\n","/**\n * LavaJsError Error\n *\n * Base error that the specific errors extend.\n */\nexport class LavaJsError extends Error {\n  constructor(message = \"There was an error\") {\n    super(message);\n  }\n}\n\n/**\n * InvalidCallback Error\n *\n * Thrown when anything but a function is given as a callback.\n */\nexport class InvalidCallback extends LavaJsError {\n  constructor(callback: any) {\n    super(`[lava.js] \"${typeof callback}\" is not a valid callback.`);\n  }\n}\n\n/**\n * InvalidLabel Error\n *\n * Thrown when a {@link Renderable} is not found in the module.\n */\nexport class RenderableNotFound extends LavaJsError {\n  constructor(label: string) {\n    super(`[lava.js] A renderable with the label \"${label}\" was not found.`);\n  }\n}\n\n/**\n * ElementIdNotFound Error\n *\n * Thrown when the given ID for an HTMLElement is not found in the DOM.\n */\nexport class DataError extends LavaJsError {\n  constructor(msg: string) {\n    super(msg);\n  }\n}\n\n/**\n * ElementIdNotFound Error\n *\n * Thrown when the given ID for an HTMLElement is not found in the DOM.\n */\nexport class ElementIdNotFound extends LavaJsError {\n  constructor(elemId: string) {\n    super(`[lava.js] DOM node where id=\"${elemId}\" was not found.`);\n  }\n}\n","import GoogleLoader from \"./GoogleLoader\";\nimport LavaJs from \"./LavaJs\";\nimport { domLoaded } from \"./lib\";\n\nexport { LavaJs, GoogleLoader, domLoaded };\n","import { Google, GoogleLoaderOptions, LavaJsOptions } from \"./types\";\n\nexport default class GoogleLoader {\n  /**\n   * Version of the Google charts API to load\n   */\n  API_VERSION = \"current\";\n\n  /**\n   * Url to Google's static loader\n   */\n  LOADER_URL = \"https://www.gstatic.com/charts/loader.js\";\n\n  /**\n   * Packages to load\n   */\n  private packages: Set<string> = new Set();\n\n  constructor(private options: LavaJsOptions) {}\n\n  /**\n   * Flag that will be true once window.google is available in page.\n   */\n  public get isLoaded(): boolean {\n    return typeof window.google !== \"undefined\";\n  }\n\n  /**\n   * Flag that will be true once Google's Static Loader is in page.\n   */\n  public get googleLoaderInPage(): boolean {\n    const scripts = document.getElementsByTagName(\"script\");\n\n    for (const script of Array.from(scripts)) {\n      if (script.src === this.LOADER_URL) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Get the options for the google loader.\n   */\n  public get config(): GoogleLoaderOptions {\n    const config: GoogleLoaderOptions = {\n      language: this.options.locale || \"en\",\n      packages: Array.from(this.packages)\n    };\n\n    if (this.options.mapsApiKey !== \"\") {\n      config.mapsApiKey = this.options.mapsApiKey;\n    }\n\n    return config;\n  }\n\n  /**\n   * Add one package to the list that Google needs to load.\n   */\n  public addPackage(pkgs: string): void {\n    this.packages.add(pkgs);\n  }\n\n  /**\n   * Load the Google Static Loader and resolve the promise when ready.\n   */\n  public async loadGoogle(): Promise<Google> {\n    console.log(\"[lava.js] Resolving Google...\");\n\n    if (this.googleLoaderInPage === false) {\n      console.log(\"[lava.js] Static loader not found, appending to head\");\n\n      await this.addGoogleScriptToHead();\n    }\n\n    return new Promise(resolve => {\n      console.log(\"[lava.js] Static loader found, initializing window.google\");\n\n      window.google.charts.load(this.API_VERSION, this.config);\n\n      console.log(\"[lava.js] Loaded Google with config:\", this.config);\n\n      window.google.charts.setOnLoadCallback(() => {\n        resolve(window.google);\n      });\n    });\n  }\n\n  /**\n   * Create a new script tag for the Google Static Loader\n   */\n  private addGoogleScriptToHead(): Promise<void> {\n    return new Promise(resolve => {\n      const script = document.createElement(\"script\") as ScriptElement;\n\n      script.type = \"text/javascript\";\n      script.async = true;\n      script.src = this.LOADER_URL;\n      script.onload = script.onreadystatechange = (event: Event) => {\n        // eslint-disable-next-line no-param-reassign\n        event = event || window.event;\n\n        if (\n          event.type === \"load\" ||\n          /loaded|complete/.test(script.readyState)\n        ) {\n          script.onload = script.onreadystatechange = null;\n\n          resolve();\n        }\n      };\n\n      document.head.appendChild(script);\n    });\n  }\n}\n","function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n","import { TinyEmitter } from \"tiny-emitter\";\n\nimport DataQuery from \"./DataQuery\";\nimport { DataError, ElementIdNotFound } from \"./Errors\";\nimport { createDataTable } from \"./lib\";\nimport {\n  ChartClasses,\n  Formatter,\n  RenderableTmpl,\n  RenderableType,\n  SupportedCharts\n} from \"./types\";\nimport { getProp, VIZ_PROPS } from \"./VisualizationProps\";\n\n/**\n * The {@link Renderable} class is the base for {@link Chart}s and {@link Dashboard}s\n * to share common methods between the two types.\n *\n *\n * @author    Kevin Hill <kevinkhill@gmail.com>\n * @copyright (c) 2019, Kevin Hill\n * @license   MIT\n */\nexport default class Renderable extends TinyEmitter {\n  [K: string]: any;\n\n  /**\n   * Unique label for the {@link Chart} / {@link Dashboard}.\n   */\n  public label: any;\n\n  /**\n   * Configurable options.\n   */\n  public options: Record<string, any>;\n\n  /**\n   * DataTable for the {@link Chart} / {@link Dashboard}.\n   */\n  public data!: google.visualization.DataTable;\n\n  /**\n   * PreDraw hook\n   */\n  public preDraw!: Function;\n\n  /**\n   * PostDraw hook\n   */\n  public postDraw!: Function;\n\n  /**\n   * Google chart object created once the {@link Chart} / {@link Dashboard}\n   * has been rendered.\n   */\n  public googleChart: any;\n\n  /**\n   * Type of {@link Renderable}.\n   */\n  public readonly type: SupportedCharts | RenderableType;\n\n  /**\n   * The google.visualization class needed for rendering.\n   */\n  public readonly class: ChartClasses;\n\n  /**\n   * The google.visualization package needed for rendering.\n   */\n  public readonly package: string;\n\n  /**\n   * HTMLElement into which the chart will be rendered.\n   */\n  public readonly container!: HTMLElement | null;\n\n  /**\n   * Element ID of the DOM node for the container.\n   */\n  public readonly elementId: string;\n\n  /**\n   * Formatters for the DataTable\n   */\n  protected formats: Formatter[];\n\n  /**\n   * The source of the DataTable, to be used in setData().\n   */\n  private dataSrc: any;\n\n  /**\n   * Create a new Renderable\n   *\n   * @param {Object} json\n   */\n  constructor(json: RenderableTmpl) {\n    super();\n\n    this.type = json.type;\n    this.label = json.label;\n    this.dataSrc = json.data;\n    this.elementId = json.elementId;\n\n    this.container = document.getElementById(this.elementId);\n\n    if (this.container === null) {\n      throw new Error(\n        `document.getElementById(\"${this.elementId}\") did not return an HTMLElement`\n      );\n    }\n\n    this.options = json.options || {};\n    this.formats = json.formats || [];\n\n    this.class = getProp(this.type as SupportedCharts, VIZ_PROPS.CLASS);\n    this.package = getProp(this.type as SupportedCharts, VIZ_PROPS.PACKAGE);\n  }\n\n  /**\n   * Unique identifier for the {@link Chart} / {@link Dashboard}.\n   */\n  public get uuid(): string {\n    return this.type + \"::\" + this.label;\n  }\n\n  /**\n   * Draws the {@link Chart} / {@link Dashboard} with the predefined data and options.\n   *\n   * @public\n   */\n  public draw(): void {\n    if (typeof this._preDraw === \"function\") {\n      console.log(`[lava.js] Running ${this.uuid}._preDraw()`);\n\n      this._preDraw();\n    }\n\n    if (typeof this.preDraw === \"function\") {\n      console.log(`[lava.js] Running ${this.uuid}.preDraw()`);\n\n      this.preDraw();\n    }\n\n    if (!this.data) {\n      throw new DataError(`${this.uuid} Could not draw, data is ${this.data}`);\n    }\n\n    this.googleChart.draw(this.data, this.options);\n\n    if (typeof this._postDraw === \"function\") {\n      console.log(`[lava.js] Running ${this.uuid}._postDraw()`);\n\n      this._postDraw();\n    }\n\n    if (typeof this.postDraw === \"function\") {\n      console.log(`[lava.js] Running ${this.uuid}.postDraw()`);\n\n      this.postDraw();\n    }\n  }\n\n  //noinspection JSUnusedGlobalSymbols\n  /**\n   * Run the setup and draw the chart.\n   *\n   * Any dependency on \"google\" must be within the run() scope.\n   *\n   * This will be called after the static loaded has completed\n   * registering window.google\n   *\n   * @return {Promise}\n   */\n  async run(): Promise<any> {\n    if (!this.container) {\n      throw new ElementIdNotFound(this.elementId);\n    }\n\n    // this.attachEventRelays();\n\n    await this.setData(this.dataSrc);\n\n    if (this.formats) {\n      this.applyFormats();\n    }\n\n    this.draw();\n  }\n\n  /**\n   * Sets the {@link DataTable} for the {@link Renderable}.\n   *\n   * @public\n   * @param {Object|Function|Array|DataQuery|DataTable} payload Source of data\n   */\n  public async setData(payload: any): Promise<void> {\n    if (payload instanceof DataQuery) {\n      console.log(`[lava.js] Sending DataQuery for ${this.uuid}`);\n\n      const response = await payload.send();\n\n      console.log(`[lava.js] Response received:`, response);\n\n      this.data = response.getDataTable();\n    } else {\n      this.data = createDataTable(payload);\n    }\n\n    if (this.data instanceof google.visualization.DataTable === false) {\n      throw new DataError(\n        `There was a error setting the data for ${this.uuid}`\n      );\n    }\n\n    console.log(`[lava.js] Data set for ${this.uuid}`, this.data);\n\n    if (payload.formats) {\n      this.applyFormats(payload.formats);\n    }\n  }\n\n  /**\n   * Apply the formats to the DataTable\n   */\n  public applyFormats(formats?: Formatter[]): void {\n    if (formats) {\n      this.formats = formats;\n    }\n\n    for (const format of this.formats) {\n      const formatter = new window.google.visualization[format.type](\n        format.options\n      );\n\n      console.log(`[lava.js] Formatting data for ${this.uuid}.`);\n      console.log(\n        `[lava.js] Formatting column [${format.index}] with:`,\n        format\n      );\n\n      formatter.format(this.data, format.index);\n    }\n  }\n\n  /**\n   * Attach event emitters onto the google chart to relay the events\n   * forward onto the lavachart.\n   *\n   * The Google Chart and DataTable objects will be passed to the listener\n   * callback for interaction.\n   */\n  // protected attachEventRelays(): void {\n  //   const events = [\"ready\", \"select\", \"error\", \"onmouseover\", \"onmouseout\"];\n\n  //   for (const event in events) {\n  //     window.google.visualization.events.addListener(this.googleChart, event, () =>\n  //       this.emit(event, {\n  //         chart: this.googleChart,\n  //         data: this.data\n  //       })\n  //     );\n  //   }\n  // }\n}\n","import { DataError } from \"./Errors\";\nimport {\n  GoogleQuery,\n  GoogleQueryOptions,\n  GoogleQueryResponse,\n  QueryTransformer\n} from \"./types/google\";\n\n/**\n * Used for loading remote data as a {@link DataTable}\n *\n * @see https://developers.google.com/chart/interactive/docs/reference#Query\n * @class\n * @author    Kevin Hill <kevinkhill@gmail.com>\n * @copyright (c) 2019, Kevin Hill\n * @license   http://opensource.org/licenses/MIT MIT\n */\nexport default class DataQuery {\n  public transformer: QueryTransformer;\n\n  public opts: GoogleQueryOptions;\n\n  /**\n   * Create a new DataQuery for a DataTable\n   *\n   * @throws {DataError}\n   */\n  constructor(\n    public url: string,\n    opts?: GoogleQueryOptions,\n    transformer?: QueryTransformer\n  ) {\n    this.opts = { sendMethod: \"auto\" };\n    this.transformer = (query: GoogleQuery): GoogleQuery => query;\n\n    if (transformer) {\n      this.transformer = transformer;\n    }\n\n    if (opts) {\n      this.opts = opts;\n    }\n  }\n\n  /**\n   * create a new DataQuery based on the given payload\n   *\n   * @throws {DataError}\n   */\n  public static create(payload: DataQuery): DataQuery {\n    if (!payload.url) {\n      throw new DataError(\n        '\"url\" is a mandatory parameter for creating a DataQuery.'\n      );\n    }\n\n    const query = new DataQuery(payload.url);\n\n    if (typeof payload.opts === \"object\") {\n      query.opts = payload.opts as GoogleQueryOptions;\n    }\n\n    if (typeof payload.transformer === \"function\") {\n      query.transformer = payload.transformer as QueryTransformer;\n    }\n\n    return query;\n  }\n\n  /**\n   * Send the DataQuery\n   */\n  public send(): Promise<GoogleQueryResponse> {\n    const query = new window.google.visualization.Query(this.url, this.opts);\n\n    return new Promise((resolve, reject) => {\n      this.transformer(query).send(response => {\n        if (response.isError()) {\n          reject(response);\n        }\n\n        resolve(response);\n      });\n    });\n  }\n}\n","import { domLoaded, LavaJs } from \"./src\";\r\n\r\n/**\r\n * Create a new instance and attach to window.\r\n */\r\nwindow.lava = new LavaJs();\r\n\r\n/**\r\n * If LavaJs was loaded from Lavacharts, then window.lavacharts will\r\n * be defined with a JSON object of the options set within Lavacharts.\r\n */\r\nif (typeof window.lavacharts !== \"undefined\") {\r\n  window.lava.configure(window.lavacharts.options);\r\n}\r\n\r\n/**\r\n * If the module is getting ran from Lavacharts, then autoRun\r\n * will be true and once the DOM is ready, rendering will begin.\r\n *\r\n * If the module is ran as a JS library, then auto_run defaults\r\n * to false so the user can setup the charts and call .run()\r\n */\r\nif (window.lava.autorun) {\r\n  domLoaded().then(() => window.lava.run());\r\n}\r\n","import { TinyEmitter } from \"tiny-emitter\";\n\nimport Chart from \"./Chart\";\nimport Dashboard from \"./Dashboard\";\nimport DataQuery from \"./DataQuery\";\nimport { InvalidCallback, RenderableNotFound } from \"./Errors\";\nimport GoogleLoader from \"./GoogleLoader\";\nimport { addEvent, defaultOptions } from \"./lib\";\nimport Renderable from \"./Renderable\";\nimport { ChartUpdateReturn, LavaJsOptions, RenderableTmpl } from \"./types\";\n\n/**\n * Google Chart API wrapper library\n *\n * This module can be used as a standalone, browser based library, or in\n * conjunction with the PHP library, <a href=\"https://github.com/kevinkhill/lavacharts\">Lavacharts</a>.\n *\n * @class\n * @author    Kevin Hill <kevinkhill@gmail.com>\n * @copyright (c) 2019, Kevin Hill\n * @license   http://opensource.org/licenses/MIT MIT\n */\nexport default class LavaJs extends TinyEmitter {\n  /**\n   * Version of the LavaJs module\n   */\n  static VERSION = \"4.0.0-beta3\";\n\n  /**\n   * Configurable options for the library\n   */\n  private options: LavaJsOptions = defaultOptions;\n\n  /**\n   * Chart storage\n   */\n  private volcano: Map<string, Renderable> = new Map();\n\n  /**\n   * Ready Callback\n   */\n  private readyCallback!: Function;\n\n  /**\n   * Loader class for appending the google script and making window.google available\n   */\n  private loader: GoogleLoader;\n\n  /**\n   * Create a new instance of the LavaJs library\n   */\n  constructor(options?: LavaJsOptions) {\n    super();\n\n    if (options) this.configure(options);\n\n    this.loader = new GoogleLoader(this.options);\n  }\n\n  /**\n   * Forward the autoRun option to the main object to check in page.\n   */\n  get autorun(): boolean {\n    return typeof this.options.autoRun === \"undefined\"\n      ? true\n      : this.options.autoRun;\n  }\n\n  /**\n   * Configure the LavaJs module.\n   */\n  public configure(options: LavaJsOptions): void {\n    this.options = Object.assign(this.options, options);\n  }\n\n  /**\n   * Initializes the library by loading google to the window.\n   */\n  public async init(\n    renderables?: RenderableTmpl | RenderableTmpl[]\n  ): Promise<any> {\n    console.log(\"[lava.js] Inititalizing...\");\n\n    if (renderables) {\n      if (renderables instanceof Array) {\n        renderables.forEach(this.store, this);\n      }\n\n      if (typeof renderables === \"object\") {\n        this.store(renderables as RenderableTmpl);\n      }\n    }\n\n    if (this.loader.isLoaded === false) {\n      await this.loader.loadGoogle();\n    }\n  }\n\n  /**\n   * Runs the LavaJs.js module\n   *\n   * @emits {ready}\n   */\n  public async run(): Promise<any> {\n    console.group(`[lava.js] v${LavaJs.VERSION}`);\n    console.log(\"loaded options\", this.options);\n\n    this.attachRedrawHandler();\n\n    await this.init();\n\n    console.log(\"google is ready\", window.google);\n\n    await this.renderAll();\n\n    // try {\n\n    // } catch (error) {\n    //   this.emit(\"error\", error);\n    // }\n\n    // this.emit(\"ready\");\n\n    if (typeof this.readyCallback === \"function\") {\n      console.log(\"ready!\");\n      this.readyCallback();\n    }\n\n    console.groupEnd();\n  }\n\n  public renderAll(): Promise<any>[] {\n    const promises: Promise<any>[] = [];\n\n    this.volcano.forEach(renderable => {\n      console.log(`[lava.js] Rendering ${renderable.uuid}`);\n\n      promises.push(renderable.run());\n    });\n\n    return promises;\n  }\n\n  /**\n   * Create a new {@link DataQuery} for a {@link Renderable}\n   *\n   * If a String is passed, then a new {@link DataQuery} is created with no options.\n   * If an Object is passed, then the query must be defined by the object.\n   */\n  public query(url: string | DataQuery): DataQuery {\n    if (typeof url === \"string\") {\n      return new DataQuery(url);\n    } else {\n      return DataQuery.create(url);\n    }\n  }\n\n  /**\n   * Static method for creating new Charts and Dashboards from a payload definition.\n   *\n   * The payload payload can come from Lavacharts or manually if used\n   * as an independent library.\n   */\n  public create(payload: RenderableTmpl): Renderable {\n    console.log(`[lava.js] Creating a new ${payload.type}:`, payload);\n\n    if (payload.type === \"Dashboard\") {\n      return new Dashboard(payload);\n    }\n\n    return new Chart(payload);\n  }\n\n  /**\n   * Stores or creates then stores a {@link Renderable} within the module.\n   *\n   * @todo If the library has ran, and is ready, loading new charts will force a redrawAll of all the currently drawn charts.\n   */\n  public store(renderable: RenderableTmpl): void {\n    // if (renderable instanceof Renderable === false) {\n    //   renderable = this.create(renderable);\n    // }\n    const newRenderable = this.create(renderable);\n\n    console.log(`[lava.js] Storing ${newRenderable.uuid}`);\n\n    this.loader.addPackage(newRenderable.package);\n\n    this.volcano.set(newRenderable.label, newRenderable);\n\n    //if (this.isReady) {\n    //    this.redrawAll();\n    //}\n  }\n\n  /**\n   * Retrieve a {@link Chart} / {@link Dashboard} from storage.\n   *\n   * The {@link Chart} object has the user defined properties such as data, options, formats, etc.\n   *\n   * The Google Chart object is available as \".googleChart\" from the returned LavaChart.\n   * It can be used to access any of the available methods such as\n   * getImageURI() or getChartLayoutInterface().\n   *\n   * See https://google-developers.appspot.com/chart/interactive/docs/gallery/linechart#methods\n   * for some examples relative to LineCharts.\n   *\n   * @throws {RenderableNotFound}\n   */\n  public get(label = \"\"): Renderable | undefined {\n    if (this.volcano.has(label) === false) {\n      throw new RenderableNotFound(label);\n    }\n\n    return this.volcano.get(label);\n  }\n\n  /**\n   * Assigns a callback for when the charts are ready to be interacted with.\n   *\n   * This is used to wrap calls to lava.loadData() or lava.loadOptions()\n   * to protect against accessing charts that aren't loaded yet\n   *\n   * @throws {InvalidCallback}\n   */\n  public ready(callback: Function): void {\n    if (typeof callback !== \"function\") {\n      throw new InvalidCallback(callback);\n    }\n\n    this.readyCallback = callback.bind(this);\n  }\n\n  /**\n   * Loads new data into the chart and redraws.\n   *\n   *\n   * Used with an AJAX call to a PHP method returning DataTable->topayload(),\n   * a chart can be dynamically update in page, without reloads.\n   */\n  public async loadData(\n    label: string,\n    payload: object\n  ): Promise<ChartUpdateReturn | boolean> {\n    const chart = this.get(label);\n\n    if (chart) {\n      await chart.setData(payload);\n\n      chart.draw();\n\n      return {\n        data: chart.data,\n        chart: chart.googleChart,\n        options: chart.options\n      };\n    }\n\n    return false;\n  }\n\n  /**\n   * Loads new options into a chart and redraws.\n   *\n   *\n   * Used with an AJAX call, or javascript events, to load a new array of options into a chart.\n   * This can be used to update a chart dynamically, without reloads.\n   */\n  public async loadOptions(\n    label: string,\n    payload: object\n  ): Promise<ChartUpdateReturn | boolean> {\n    const chart = this.get(label);\n\n    if (chart) {\n      chart.options = Object.assign(chart.options, payload);\n\n      chart.draw();\n\n      return {\n        data: chart.data,\n        chart: chart.googleChart,\n        options: chart.options\n      };\n    }\n\n    return false;\n  }\n\n  /**\n   * Redraws all of the registered charts on screen.\n   *\n   * This method is attached to the window resize event with debouncing\n   * to make the charts responsive to the browser resizing.\n   */\n  public redrawAll(): boolean {\n    if (this.volcano.size === 0) {\n      console.log(`[lava.js] Nothing to redraw.`);\n\n      return false;\n    }\n\n    console.log(`[lava.js] Redrawing ${this.volcano.size} renderables.`);\n\n    this.volcano.forEach(renderable => {\n      console.log(`[lava.js] Redrawing ${renderable.uuid}`);\n\n      renderable.draw();\n    });\n\n    return true;\n  }\n\n  /**\n   * Attach a listener to the window resize event for redrawing the charts.\n   */\n  private attachRedrawHandler(): void {\n    if (this.options.responsive === true) {\n      let debounced: number;\n\n      addEvent(window, \"resize\", () => {\n        // let redrawAll = this.redrawAll().bind(this);\n\n        clearTimeout(debounced);\n\n        debounced = setTimeout(() => {\n          console.log(\"[lava.js] Window re-sized, redrawing...\");\n\n          this.redrawAll();\n        }, this.options.debounceTimeout);\n      });\n    }\n  }\n}\n","import Renderable from \"./Renderable\";\nimport { RenderableTmpl } from \"./types\";\nimport { ChartFactory } from \"./types/chart\";\n\nfunction makeChartFactory(container: HTMLElement): ChartFactory {\n  return type => new window.google.visualization[type](container);\n}\n\n/**\n * Chart Class\n *\n * @author    Kevin Hill <kevinkhill@gmail.com>\n * @copyright (c) 2019, Kevin Hill\n * @license   MIT\n */\nexport default class Chart extends Renderable {\n  /**\n   * If this is set to true, then the {@link Chart} will be output as a PNG\n   *\n   * @type {Boolean}\n   */\n  png: boolean;\n\n  events!: Array<any>;\n\n  /**\n   * Create a new Chart.\n   *\n   * @exampl\n   * {\n   *     label: 'Test',\n   *     type: 'PieChart',\n   *     elementId: 'my-pie-chart',\n   *     datatable: [\n   *         ['Task', 'Hours per Day'],\n   *         ['Work',     11],\n   *         ['Eat',      2],\n   *         ['Commute',  2],\n   *         ['Watch TV', 2],\n   *         ['Sleep',    7]\n   *     ],\n   *     options: {\n   *         title: 'My Daily Activities'\n   *     }\n   * }\n   */\n  constructor(payload: RenderableTmpl) {\n    super(payload);\n\n    this.png = Boolean(payload.png);\n  }\n\n  /**\n   * Actions to perform before drawing the {@link Chart}\n   *\n   * This method will have access to window.google since it is called\n   * within the render method.\n   */\n  protected _preDraw(): void {\n    const chartFactory = makeChartFactory(this.container as HTMLElement);\n\n    this.googleChart = chartFactory(this.class);\n\n    // TODO: append Lavachart defined events?\n    // if (this.events) {\n    //     this.attachEvents();\n    // }\n  }\n\n  /**\n   * Actions to perform once the {@link Chart} has been drawn\n   *\n   * This method will have access to window.google since it is called\n   * within the run method.\n   * @private\n   */\n  protected _postDraw(): void {\n    if (this.png) {\n      this.drawPng();\n    }\n  }\n\n  /**\n   * Draws the chart as a PNG instead of the standard SVG\n   *\n   * @private\n   * @see https://developers.google.com/chart/interactive/docs/printing\n   */\n  private drawPng(): void {\n    const img = document.createElement(\"img\");\n    img.src = this.googleChart.getImageURI();\n\n    if (this.container) {\n      this.container.innerHTML = \"\";\n      this.container.appendChild(img);\n    }\n  }\n\n  /**\n   * Attach the defined chart event handlers.\n   *\n   * @private\n   * @return {void}\n   */\n  // private attachEvents(): void {\n  //   this.events.forEach((callback: Function, event: any) => {\n  //     let context = window;\n  //     let func = callback;\n\n  //     if (typeof callback === \"object\") {\n  //       // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  //       //@ts-ignore I don't know what to do here\n  //       context = context[callback[0]];\n  //       func = callback[1];\n  //     }\n\n  //     console.log(\n  //       `[lava.js] The \"${this.uuid}::${event}\" event will be handled by \"${func}\" in the context`,\n  //       context\n  //     );\n\n  //     /**\n  //      * Set the context of \"this\" within the user provided callback to the\n  //      * chart that fired the event while providing the datatable of the chart\n  //      * to the callback as an argument.\n  //      */\n  //     window.google.visualization.events.addListener(this.googleChart, event, () => {\n  //       const callback = Object.bind(\n  //         context[Object.call.prototype.toString(func)],\n  //         this.googleChart\n  //       ) as (data: google.visualization.DataTable) => any;\n\n  //       callback(this.data);\n  //     });\n  //   });\n  // }\n}\n","import { getType } from \".\";\n\n/**\n * Sets the data for the chart by creating a new DataTable\n *\n * @param {Object|Function|Array} payload Json representation of a DataTable\n */\nexport function createDataTable(payload: any): google.visualization.DataTable {\n  // If a function is received, then create an new DataTable and pass it to the\n  // function for user modifications.\n  if (getType(payload) === \"Function\") {\n    return payload(new window.google.visualization.DataTable());\n  }\n\n  // If an Array is received, then attempt to use parse with arrayToDataTable.\n  if (getType(payload) === \"Array\") {\n    return window.google.visualization.arrayToDataTable(payload);\n  }\n\n  // Since Google compiles their classes, we can't use instanceof to check since\n  // it is no longer called a \"DataTable\" (it's \"gvjs_P\" but that could change...)\n  // If this check passes, then it already is a DataTable\n  if (getType(payload.getTableProperties) === \"Function\") {\n    return payload;\n  }\n\n  // If the payload is from the php class JoinedDataTable->toJson(), then create\n  // two new DataTables and join them with the defined options.\n  if (getType(payload.data) === \"Array\") {\n    return window.google.visualization.data.join(\n      new window.google.visualization.DataTable(payload.data[0]),\n      new window.google.visualization.DataTable(payload.data[1]),\n      payload.keys,\n      payload.joinMethod,\n      payload.dt1Columns,\n      payload.dt2Columns\n    );\n  }\n\n  // If a php DataTable->toJson() payload is received, with formatted columns,\n  // then payload.data will be defined. Use this to create the DataTable.\n  if (getType(payload.data) === \"Object\") {\n    // eslint-disable-next-line no-param-reassign\n    payload = payload.data;\n  }\n\n  // If we reach here, then it must be standard JSON for creating a DataTable.\n  return new window.google.visualization.DataTable(payload);\n}\n","import { LavaJsOptions } from \"../types\";\n\nexport const defaultOptions = {\n  autoRun: true,\n  datetimeFormat: \"\",\n  debounceTimeout: 250,\n  locale: \"en\",\n  mapsApiKey: \"\",\n  responsive: true,\n  timezone: \"America/Los_Angeles\"\n} as LavaJsOptions;\n","// import { VizProps } from \"./types/chart\";\nimport { SupportedCharts } from \"./types/strings\";\n\nexport const enum VIZ_PROPS {\n  \"CLASS\" = 0,\n  \"PACKAGE\" = 1,\n  \"VERSION\" = 2\n}\n\ntype VisualizationPropertyDict = {\n  [K in SupportedCharts]: [string, string, number];\n};\n\nconst propMap = {\n  AnnotationChart: [\"AnnotationChart\", \"annotationchart\", 1],\n  AreaChart: [\"AreaChart\", \"corechart\", 1],\n  BarChart: [\"BarChart\", \"corechart\", 1],\n  BubbleChart: [\"BubbleChart\", \"corechart\", 1],\n  CalendarChart: [\"Calendar\", \"calendar\", 1],\n  CandlestickChart: [\"CandlestickChart\", \"corechart\", 1],\n  ColumnChart: [\"ColumnChart\", \"corechart\", 1],\n  ComboChart: [\"ComboChart\", \"corechart\", 1],\n  DonutChart: [\"PieChart\", \"corechart\", 1],\n  GanttChart: [\"Gantt\", \"gantt\", 1],\n  GaugeChart: [\"Gauge\", \"gauge\", 1],\n  GeoChart: [\"GeoChart\", \"geochart\", 1],\n  HistogramChart: [\"Histogram\", \"corechart\", 1],\n  LineChart: [\"LineChart\", \"corechart\", 1],\n  PieChart: [\"PieChart\", \"corechart\", 1],\n  SankeyChart: [\"Sankey\", \"sankey\", 1],\n  ScatterChart: [\"ScatterChart\", \"corechart\", 1],\n  SteppedAreaChart: [\"SteppedAreaChart\", \"corechart\", 1],\n  TableChart: [\"Table\", \"table\", 1],\n  TimelineChart: [\"Timeline\", \"timeline\", 1],\n  TreeMapChart: [\"TreeMap\", \"treemap\", 1],\n  WordTreeChart: [\"WordTree\", \"wordtree\", 1]\n} as VisualizationPropertyDict;\n\nexport function getProp(chart: SupportedCharts, prop: number): any {\n  return propMap[chart][prop];\n}\n","import Renderable from \"./Renderable\";\n/**\n * Dashboard Class\n *\n * @class\n * @module    module:LavaJs/Dashboard\n * @author    Kevin Hill <kevinkhill@gmail.com>\n * @copyright (c) 2019, Kevin Hill\n * @license   MIT\n */\nexport default class Dashboard extends Renderable {\n  bindings: any;\n\n  /**\n   * Create a new Dashboard\n   *\n   * @param {Object} json JSON object representing a Dashboard.\n   */\n  constructor(json: any) {\n    json.type = \"Dashboard\";\n\n    super(json);\n\n    this.googleChart = new window.google.visualization.Dashboard(this\n      .container as HTMLElement);\n\n    this.bindings = json.bindings;\n\n    // this._attachBindings();\n  }\n\n  /**\n   * Process and attach the bindings to the dashboard.\n   *\n   * @TODO: Needs to be modified and tested for the other types of bindings.\n   */\n  // private _attachBindings(): void {\n  //   for (const binding of this.bindings) {\n  //     const controlWraps = [];\n  //     const chartWraps = [];\n\n  //     for (const controlWrap of binding.controlWrappers) {\n  //       controlWraps.push(new google.visualization.ControlWrapper(controlWrap));\n  //     }\n\n  //     for (const chartWrap of binding.chartWrappers) {\n  //       chartWraps.push(new google.visualization.ChartWrapper(chartWrap));\n  //     }\n\n  //     this.googleChart.bind(controlWraps, chartWraps);\n  //   }\n  // }\n}\n"],"sourceRoot":""}